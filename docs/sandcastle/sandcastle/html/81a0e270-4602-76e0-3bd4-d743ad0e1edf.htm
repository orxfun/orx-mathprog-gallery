<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Orx.MathProg.Solvers Namespace</title><meta name="Title" content="Orx.MathProg.Solvers" /><meta name="Help.Id" content="N:Orx.MathProg.Solvers" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Orx.MathProg.Solvers" /><meta name="guid" content="81a0e270-4602-76e0-3bd4-d743ad0e1edf" /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Orx.MathProg (C#)</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Orx.<wbr />Math<wbr />Prog.<wbr />Solvers Namespace</h1><div class="summary"> </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Classes</h2><div id="IDACASection"><table id="classList" class="table is-hoverable"><tr><td><a href="1b255a89-8581-64fb-7cce-418db01482c9.htm">Cplex</a></td><td>
            Mathematical model solver using IBM CPLEX Optimizer (https://www.ibm.com/de-de/analytics/cplex-optimizer).
            </td></tr><tr><td><a href="e7c5b5e2-5665-3068-389f-08fb689ff270.htm">MathModelSolution</a></td><td>
            Solution of a <a href="56e661b0-151b-8028-b934-5d374002f765.htm">MathModel</a> by a solver such as <span class="noLink">[!:Cplex2]</span> or <span class="noLink">[!:Scip2]</span>.
            
            <p>
            It provides meta information such as solution status and objectiev function value.
            Further, it allows to access solution values of the decision variables.
            </p>
            
            # Case 1: Feasible
            The following example demonstrates a feasible solution case on a trivial model.
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">Set i = Set("i").HasElementsUntil(3); // { 0, 1, 2 }
Set j = Set("j").HasElementsUntil(4); // { 0, 1, 2, 3 }
VarD2 y = Variable("y").HasIndices(i, j).IsBinary();
Objective maxCount = maximize | sum(over(i, j), y[i, j]);
MathModel model = MathModel.New("dummy model").WithObjective(maxCount).HasNoConstraints();

Cplex solver = new();
CplexParams pars = new();
var resSolution = await solver.Solve(model, pars);
var solution = resSolution.Unwrap(); // normally, check if it is 'IsOk' before unwrapping!

// solution status currently depends on the used solver
Assert.Equal("integer optimal solution", solution.SolutionStatus);

double objFunValue = solution.ObjectiveValue.Unwrap(); // must be okay to Unwrap since status is 'integer optimal'.
Assert.Equal(12, objFunValue);

// ySoln is a map of indices to solution values;
// allows access to solution values of decision variables through indices.
// since y is of type VarD2, it has two indices for i and j.
Dictionary&lt;(int, int), double&gt; ySoln = solution.VarIndicesAndValuesOf(y).Unwrap();
Assert.Equal(1, y[(0, 0)];
Assert.Equal(1, y[(2, 3)];
Assert.False(ySoln.ContainsKey((4, 5)); // y(4, 5) is not a variable of the model, check elements of i and j.</code></pre></div></div>
            
            # Case 2: Infeasible
            The following example demonstrates when a model is infeasible due to a trivially impossible constraint.
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">Set i = Set("i").HasElementsUntil(3); // { 0, 1, 2 }
Set j = Set("j").HasElementsUntil(4); // { 0, 1, 2, 3 }
VarD2 y = Variable("y").HasIndices(i, j).IsBinary();
Objective maxCount = maximize | sum(over(i, j), y[i, j]);
Constraint impossible = sum(over(i, j), y[i, j]) &gt;= 100;
MathModel model = MathModel.New("dummy model").WithObjective(maxCount).HasConstraints(impossible);

Scip solver = new();
ScipParams pars = new();
var resSolution = await solver.Solve(model, pars);
var solution = resSolution.Unwrap(); // normally, check if it is 'IsOk' before unwrapping!

// solution status currently depends on the used solver
Assert.Equal("infeasible", solution.SolutionStatus);

// at this point we also know that objective function value and variables' values are not available (None):
Assert.Equal(solution.ObjectiveValue.IsNone);
Assert.Equal(solution.VarIndicesAndValuesOf(y).IsNone);</code></pre></div></div>
            
            # Case 3: An error occurred with the solver
            <p>
            An easy way to simulate this is to force a wrong path for the solver.
            In reality, different problems might cause the solver to fail such as out-of-memory problem.
            </p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">Set i = Set("i").HasElementsUntil(3); // { 0, 1, 2 }
Set j = Set("j").HasElementsUntil(4); // { 0, 1, 2, 3 }
VarD2 y = Variable("y").HasIndices(i, j).IsBinary();
Objective maxCount = maximize | sum(over(i, j), y[i, j]);
MathModel model = MathModel.New("dummy model").WithObjective(maxCount).HasNoConstraints();

Cplex solver = new("wrong path");
var resSolution = await solver.Solve(model);

Assert.True(resSolution.IsErr); // "resSolution.Unwrap()" would've thrown an exception here; better to check before unwrapping
Assert.True(resSolution.ErrorMessage().Unwrap().Contains("wrong path")); // the error message provides detailes about why the solver failed.</code></pre></div></div></td></tr><tr><td><a href="20f335b6-3d59-ec0c-e82d-2b84b2b1804c.htm">Scip</a></td><td>
            Mathematical model solver using SCIP (https://www.scipopt.org/).
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Structures</h2><div id="IDBCASection"><table id="structureList" class="table is-hoverable"><tr><td><a href="42705570-1165-4339-cd78-e9af8568a1a2.htm">CplexParams</a></td><td>
            Cplex parameters.
            </td></tr><tr><td><a href="381ffd2d-92c7-e775-eebb-14d171022c91.htm">ScipParams</a></td><td>
            Scip parameters.
            </td></tr></table></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Classes</a></li><li><a class="quickLink">Structures</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column">https://github.com/orxfun/orx-mathprog-gallery<div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:orx.ugur.arikan%40gmail.com?Subject=Orx.MathProg%20(C#)">orx.ugur.arikan@gmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>